name: build-release

on:
  workflow_dispatch:
  push:
    branches:
      - rm-electron2

jobs:
  build-executables:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: read package.json version
        uses: Saionaro/extract-package-version@v1.2.1
        id: package-json

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Install ldid
        uses: MOZGIII/install-ldid-action@v1
        with:
          tag: v2.1.5-procursus2
      - name: Install dependencies
        run: |
          sudo apt-get install libasound2-dev pulseaudio

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm installAll

      # - name: Cache pkg modules
      #   id: cache-pkg
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-pkg
      #   with:
      #     # pkg cache files are stored in `~/.pkg-cache`
      #     path: ~/.pkg-cache
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
          
      - name: Build
        run: pnpm build
        
      - name: Run pkg
        run: |
          npx pkg . -t macos-arm64,macos-x64,linux-arm64,linux-x64,win-arm64,win-x64
          ls dist

          mkdir ./mac-dist
          mv ./dist/gabin-macos-arm64 ./mac-dist/
          mv ./dist/gabin-macos-x64 ./mac-dist/

      - name: Upload executables to asset
        id: upload-release-asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          tag_name: ${{ steps.package-json.outputs.version }}
          files: |
             ./dist/gabin-win-arm64.exe
             ./dist/gabin-win-x64.exe
             ./dist/gabin-linux-arm64
             ./dist/gabin-linux-x64

      - uses: actions/upload-artifact@master
        with:
          name: ${{ steps.package-json.outputs.version }}
          path: mac-dist
          retention-days: 1

  sign-mac-executables:
    runs-on: macos-latest
    needs: build-executables
    steps:
      - uses: actions/checkout@v3
      - name: read package.json version
        uses: Saionaro/extract-package-version@v1.2.1
        id: package-json

      - uses: actions/download-artifact@master
        with:
          name: ${{ steps.package-json.outputs.version }}
          path: mac-dist

      - name: Sign macOS executables
        run: |
          codesign --force -s - mac-dist/gabin-macos-arm64 -v
          codesign --force -s - mac-dist/gabin-macos-x64 -v

      - name: Upload executables to asset
        id: upload-release-asset
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          tag_name: ${{ steps.package-json.outputs.version }}
          files: |
             ./dist/gabin-macos-x64
              ./dist/gabin-macos-arm64